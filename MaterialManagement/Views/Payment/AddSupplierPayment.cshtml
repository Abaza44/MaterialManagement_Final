@model MaterialManagement.BLL.ModelVM.Payment.SupplierPaymentCreateModel

@{
    ViewData["Title"] = "إضافة دفعة لمورد";
}

<h1><i class="bi bi-send-check"></i> إضافة دفعة لمورد</h1>
<hr />

<div class="row">
    <div class="col-md-8">
        <div class="card shadow-sm">
            <div class="card-body">
                <form asp-action="AddSupplierPayment" method="post">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="mb-3">
                        <label asp-for="SupplierId" class="form-label fw-bold"></label>
                        <select asp-for="SupplierId" class="form-select" asp-items="ViewBag.SupplierList" id="SupplierId">
                            <option value="">-- اختر المورد --</option>
                        </select>
                        <span asp-validation-for="SupplierId" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="PurchaseInvoiceId" class="form-label fw-bold"></label>
                        <select asp-for="PurchaseInvoiceId" class="form-select" asp-items="ViewBag.InvoiceList" id="PurchaseInvoiceId">
                            <option value="">-- دفعة تحت الحساب (بدون فاتورة) --</option>
                        </select>
                        <span asp-validation-for="PurchaseInvoiceId" class="text-danger"></span>
                    </div>

                    <!-- <<< الحقول التي كانت ناقصة >>> -->
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="PaymentDate" class="form-label fw-bold"></label>
                            <input asp-for="PaymentDate" class="form-control" type="date" />
                            <span asp-validation-for="PaymentDate" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="Amount" class="form-label fw-bold"></label>
                            <input asp-for="Amount" class="form-control" type="number" step="0.01" />
                            <span asp-validation-for="Amount" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="PaymentMethod" class="form-label fw-bold"></label>
                        <select asp-for="PaymentMethod" class="form-select">
                            <option value="">-- اختر طريقة الدفع --</option>
                            <option value="نقدي">نقدي</option>
                            <option value="تحويل بنكي">تحويل بنكي</option>
                            <option value="شيك">شيك</option>
                        </select>
                        <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Notes" class="form-label fw-bold"></label>
                        <textarea asp-for="Notes" class="form-control" rows="2"></textarea>
                    </div>
                    <!-- <<< نهاية الحقول الناقصة >>> -->

                    <hr />
                    <button type="submit" class="btn btn-success"><i class="bi bi-save"></i> حفظ الدفعة</button>
                    <a asp-controller="Supplier" asp-action="Index" class="btn btn-secondary">إلغاء</a>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const supplierDropdown = document.getElementById('SupplierId');
            const invoiceDropdown = document.getElementById('PurchaseInvoiceId');

            supplierDropdown.addEventListener('change', function () {
                const supplierId = this.value;

                invoiceDropdown.innerHTML = '<option value="">-- جاري التحميل... --</option>';

                if (supplierId) {
                    fetch(`/Payment/GetUnpaidInvoicesForSupplier/${supplierId}`)
                        .then(response => response.json())
                        .then(data => {
                            invoiceDropdown.innerHTML = '<option value="">-- دفعة تحت الحساب (بدون فاتورة) --</option>';
                            data.forEach(invoice => {
                                const option = document.createElement('option');
                                option.value = invoice.id;
                                option.textContent = `الفاتورة #${invoice.invoiceNumber}`;
                                invoiceDropdown.appendChild(option);
                            });
                        })
                        .catch(error => {
                            console.error('Error fetching invoices:', error);
                            invoiceDropdown.innerHTML = '<option value="">-- حدث خطأ --</option>';
                        });
                } else {
                    invoiceDropdown.innerHTML = '<option value="">-- دفعة تحت الحساب (بدون فاتورة) --</option>';
                }
            });
        });
    </script>
}